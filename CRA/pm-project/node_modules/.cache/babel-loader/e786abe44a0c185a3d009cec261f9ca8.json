{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/admin_lghxlabs_com/coderemote/src/Gabryx/repos/PM-10-Project/pm-project/PM10-Project/CRA/pm-project/src/components/MapView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../MapView/index.css'; // Mapbox GL JS Api \n\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoidGhlcmVhbGdhYnJ5eCIsImEiOiJja2hmZXdjYmcwN3BmMnlxcTI3M3FlczIzIn0.JHdtdPNZbQmPNRxIO1T0Yw';\nexport default function Index({\n  setCurrentNav\n}) {\n  _s();\n\n  // default Trento state-View \n  let [lng, setLng] = useState(11.1300);\n  let [lat, setLat] = useState(46.0650);\n  let [zoom, setZoom] = useState(12);\n  let pmHeatmapData = null;\n  var bounds = [[10.847135, 45.861335], // Southwest coordinates\n  [11.500217, 46.308461] // Northeast coordinates \n  ];\n  const mapContainer = useRef();\n  useEffect(() => {\n    setCurrentNav('maps'); // console.log(lat, lng); \n\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom,\n      maxBounds: bounds\n    });\n    map.on('load', () => {\n      // Add a geojson point source. \n      map.addSource('pm-heatmap-data', {\n        'type': 'geojson',\n        'data': {}\n      }); // label: 'string', object: {'type': 'geojson', 'data':'data.geojson'} \n\n      map.addLayer({\n        'id': 'pm-heatmap',\n        'type': 'heatmap',\n        'source': 'pm-heatmap-data',\n        'maxzoom': 16,\n        paint: {\n          // increase weight as diameter breast height increases\n          'heatmap-weight': {\n            property: 'pm10Level',\n            type: 'exponential',\n            stops: [[0.0, 0], [5.0, 1]]\n          },\n          // increase intensity as zoom level increases\n          'heatmap-intensity': {\n            stops: [[11, 1], [15, 3]]\n          },\n          // assign color values be applied to points depending on their density\n          'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(236,222,239,0)', 0.2, 'rgb(208,209,230)', 0.4, 'rgb(166,189,219)', 0.6, 'rgb(103,169,207)', 0.8, 'rgb(28,144,153)'],\n          // increase radius as zoom increases\n          'heatmap-radius': {\n            stops: [[11, 15], [15, 20]]\n          },\n          // decrease opacity to transition into the circle layer\n          'heatmap-opacity': {\n            default: 1,\n            stops: [[14, 1], [15, 0]]\n          }\n        }\n      }, 'waterway-label');\n      map.addLayer({\n        id: 'pm-heat-datapoints',\n        type: 'circle',\n        source: 'pm-heatmap-data',\n        minzoom: 14,\n        paint: {\n          // increase the radius of the circle as the zoom level and dbh value increases\n          'circle-radius': {\n            property: 'pm10Level',\n            type: 'exponential',\n            stops: [[{\n              zoom: 15,\n              value: 1\n            }, 5], [{\n              zoom: 15,\n              value: 62\n            }, 10], [{\n              zoom: 22,\n              value: 1\n            }, 20], [{\n              zoom: 22,\n              value: 62\n            }, 50]]\n          },\n          'circle-color': {\n            property: 'pm10Level',\n            type: 'exponential',\n            stops: [[0, 'rgba(236,222,239,0)'], [10, 'rgb(236,222,239)'], [20, 'rgb(208,209,230)'], [30, 'rgb(166,189,219)'], [40, 'rgb(103,169,207)'], [50, 'rgb(28,144,153)'], [60, 'rgb(1,108,89)']]\n          },\n          'circle-stroke-color': 'white',\n          'circle-stroke-width': 1,\n          'circle-opacity': {\n            stops: [[14, 0], [15, 1]]\n          }\n        }\n      }, 'waterway-label');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MapView\",\n    ref: mapContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Index, \"TmkJeZpz1xeawSfqBiuxmUBj6po=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/admin_lghxlabs_com/coderemote/src/Gabryx/repos/PM-10-Project/pm-project/PM10-Project/CRA/pm-project/src/components/MapView/index.js"],"names":["React","useState","useEffect","useRef","mapboxgl","accessToken","Index","setCurrentNav","lng","setLng","lat","setLat","zoom","setZoom","pmHeatmapData","bounds","mapContainer","map","Map","container","current","style","center","maxBounds","on","addSource","addLayer","paint","property","type","stops","default","id","source","minzoom","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,sBAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEAA,QAAQ,CAACC,WAAT,GAAuB,mGAAvB;AAGA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAkC;AAAA;;AAE7C;AACA,MAAI,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,OAAD,CAA5B;AACA,MAAI,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,OAAD,CAA5B;AACA,MAAI,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAA9B;AAEA,MAAIa,aAAa,GAAG,IAApB;AAEA,MAAIC,MAAM,GAAG,CACX,CAAC,SAAD,EAAY,SAAZ,CADW,EACa;AACxB,GAAC,SAAD,EAAY,SAAZ,CAFW,CAEY;AAFZ,GAAb;AAKA,QAAMC,YAAY,GAAGb,MAAM,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa,CAAC,MAAD,CAAb,CADY,CAEZ;;AAEA,UAAMU,GAAG,GAAG,IAAIb,QAAQ,CAACc,GAAb,CAAiB;AACzBC,MAAAA,SAAS,EAAEH,YAAY,CAACI,OADC;AAEzBC,MAAAA,KAAK,EAAE,oCAFkB;AAGzBC,MAAAA,MAAM,EAAE,CAACd,GAAD,EAAME,GAAN,CAHiB;AAIzBE,MAAAA,IAAI,EAAEA,IAJmB;AAKzBW,MAAAA,SAAS,EAAER;AALc,KAAjB,CAAZ;AAQAE,IAAAA,GAAG,CAACO,EAAJ,CAAO,MAAP,EAAe,MAAM;AACjB;AACAP,MAAAA,GAAG,CAACQ,SAAJ,CACI,iBADJ,EACuB;AACf,gBAAQ,SADO;AAEf,gBAAQ;AAFO,OADvB,EAFiB,CAMb;;AAEJR,MAAAA,GAAG,CAACS,QAAJ,CAAa;AACT,cAAM,YADG;AAET,gBAAQ,SAFC;AAGT,kBAAU,iBAHD;AAIT,mBAAW,EAJF;AAKTC,QAAAA,KAAK,EAAE;AACH;AACA,4BAAkB;AAChBC,YAAAA,QAAQ,EAAE,WADM;AAEhBC,YAAAA,IAAI,EAAE,aAFU;AAGhBC,YAAAA,KAAK,EAAE,CACL,CAAC,GAAD,EAAM,CAAN,CADK,EAEL,CAAC,GAAD,EAAM,CAAN,CAFK;AAHS,WAFf;AAUH;AACA,+BAAqB;AACnBA,YAAAA,KAAK,EAAE,CACL,CAAC,EAAD,EAAK,CAAL,CADK,EAEL,CAAC,EAAD,EAAK,CAAL,CAFK;AADY,WAXlB;AAiBH;AACA,2BAAiB,CACf,aADe,EAEf,CAAC,QAAD,CAFe,EAGf,CAAC,iBAAD,CAHe,EAIf,CAJe,EAIZ,qBAJY,EAKf,GALe,EAKV,kBALU,EAMf,GANe,EAMV,kBANU,EAOf,GAPe,EAOV,kBAPU,EAQf,GARe,EAQV,iBARU,CAlBd;AA4BH;AACA,4BAAkB;AAChBA,YAAAA,KAAK,EAAE,CACL,CAAC,EAAD,EAAK,EAAL,CADK,EAEL,CAAC,EAAD,EAAK,EAAL,CAFK;AADS,WA7Bf;AAmCH;AACA,6BAAmB;AACjBC,YAAAA,OAAO,EAAE,CADQ;AAEjBD,YAAAA,KAAK,EAAE,CACL,CAAC,EAAD,EAAK,CAAL,CADK,EAEL,CAAC,EAAD,EAAK,CAAL,CAFK;AAFU;AApChB;AALE,OAAb,EAiDG,gBAjDH;AAmDAb,MAAAA,GAAG,CAACS,QAAJ,CAAa;AACTM,QAAAA,EAAE,EAAE,oBADK;AAETH,QAAAA,IAAI,EAAE,QAFG;AAGTI,QAAAA,MAAM,EAAE,iBAHC;AAITC,QAAAA,OAAO,EAAE,EAJA;AAKTP,QAAAA,KAAK,EAAE;AACL;AACA,2BAAiB;AACfC,YAAAA,QAAQ,EAAE,WADK;AAEfC,YAAAA,IAAI,EAAE,aAFS;AAGfC,YAAAA,KAAK,EAAE,CACL,CAAC;AAAElB,cAAAA,IAAI,EAAE,EAAR;AAAYuB,cAAAA,KAAK,EAAE;AAAnB,aAAD,EAAyB,CAAzB,CADK,EAEL,CAAC;AAAEvB,cAAAA,IAAI,EAAE,EAAR;AAAYuB,cAAAA,KAAK,EAAE;AAAnB,aAAD,EAA0B,EAA1B,CAFK,EAGL,CAAC;AAAEvB,cAAAA,IAAI,EAAE,EAAR;AAAYuB,cAAAA,KAAK,EAAE;AAAnB,aAAD,EAAyB,EAAzB,CAHK,EAIL,CAAC;AAAEvB,cAAAA,IAAI,EAAE,EAAR;AAAYuB,cAAAA,KAAK,EAAE;AAAnB,aAAD,EAA0B,EAA1B,CAJK;AAHQ,WAFZ;AAYL,0BAAgB;AACdP,YAAAA,QAAQ,EAAE,WADI;AAEdC,YAAAA,IAAI,EAAE,aAFQ;AAGdC,YAAAA,KAAK,EAAE,CACL,CAAC,CAAD,EAAI,qBAAJ,CADK,EAEL,CAAC,EAAD,EAAK,kBAAL,CAFK,EAGL,CAAC,EAAD,EAAK,kBAAL,CAHK,EAIL,CAAC,EAAD,EAAK,kBAAL,CAJK,EAKL,CAAC,EAAD,EAAK,kBAAL,CALK,EAML,CAAC,EAAD,EAAK,iBAAL,CANK,EAOL,CAAC,EAAD,EAAK,eAAL,CAPK;AAHO,WAZX;AAyBL,iCAAuB,OAzBlB;AA0BL,iCAAuB,CA1BlB;AA2BL,4BAAkB;AAChBA,YAAAA,KAAK,EAAE,CACL,CAAC,EAAD,EAAK,CAAL,CADK,EAEL,CAAC,EAAD,EAAK,CAAL,CAFK;AADS;AA3Bb;AALE,OAAb,EAsCS,gBAtCT;AAwCH,KAnGD;AAuGH,GAnHQ,EAmHN,EAnHM,CAAT;AAsHA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAEd;AAA9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3IuBV,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect, useRef } from 'react' \nimport '../MapView/index.css' \n\n// Mapbox GL JS Api \nimport mapboxgl from 'mapbox-gl'; \n\nmapboxgl.accessToken = 'pk.eyJ1IjoidGhlcmVhbGdhYnJ5eCIsImEiOiJja2hmZXdjYmcwN3BmMnlxcTI3M3FlczIzIn0.JHdtdPNZbQmPNRxIO1T0Yw';\n\n\nexport default function Index({ setCurrentNav }) { \n\n    // default Trento state-View \n    let [lng, setLng] = useState(11.1300); \n    let [lat, setLat] = useState(46.0650); \n    let [zoom, setZoom] = useState(12); \n\n    let pmHeatmapData = null; \n\n    var bounds = [\n      [10.847135, 45.861335], // Southwest coordinates\n      [11.500217, 46.308461] // Northeast coordinates \n    ]; \n\n    const mapContainer = useRef(); \n\n    useEffect(() => { \n        setCurrentNav('maps');\n        // console.log(lat, lng); \n\n        const map = new mapboxgl.Map({ \n            container: mapContainer.current, \n            style: 'mapbox://styles/mapbox/streets-v11', \n            center: [lng, lat], \n            zoom: zoom,\n            maxBounds: bounds \n        }); \n\n        map.on('load', () => { \n            // Add a geojson point source. \n            map.addSource( \n                'pm-heatmap-data', { \n                    'type': 'geojson', \n                    'data': {}}\n            );  // label: 'string', object: {'type': 'geojson', 'data':'data.geojson'} \n\n            map.addLayer({\n                'id': 'pm-heatmap',\n                'type': 'heatmap',\n                'source': 'pm-heatmap-data',\n                'maxzoom': 16,\n                paint: {\n                    // increase weight as diameter breast height increases\n                    'heatmap-weight': {\n                      property: 'pm10Level',\n                      type: 'exponential',\n                      stops: [\n                        [0.0, 0],\n                        [5.0, 1] \n                      ]\n                    },\n                    // increase intensity as zoom level increases\n                    'heatmap-intensity': {\n                      stops: [\n                        [11, 1],\n                        [15, 3]\n                      ]\n                    },\n                    // assign color values be applied to points depending on their density\n                    'heatmap-color': [\n                      'interpolate',\n                      ['linear'],\n                      ['heatmap-density'],\n                      0, 'rgba(236,222,239,0)',\n                      0.2, 'rgb(208,209,230)',\n                      0.4, 'rgb(166,189,219)',\n                      0.6, 'rgb(103,169,207)',\n                      0.8, 'rgb(28,144,153)'\n                    ],\n                    // increase radius as zoom increases\n                    'heatmap-radius': {\n                      stops: [\n                        [11, 15],\n                        [15, 20]\n                      ]\n                    },\n                    // decrease opacity to transition into the circle layer\n                    'heatmap-opacity': {\n                      default: 1,\n                      stops: [\n                        [14, 1],\n                        [15, 0]\n                      ]\n                    },\n                }\n            }, 'waterway-label'); \n\n            map.addLayer({\n                id: 'pm-heat-datapoints',\n                type: 'circle',\n                source: 'pm-heatmap-data',\n                minzoom: 14,\n                paint: {\n                  // increase the radius of the circle as the zoom level and dbh value increases\n                  'circle-radius': {\n                    property: 'pm10Level',\n                    type: 'exponential',\n                    stops: [\n                      [{ zoom: 15, value: 1 }, 5],\n                      [{ zoom: 15, value: 62 }, 10],\n                      [{ zoom: 22, value: 1 }, 20],\n                      [{ zoom: 22, value: 62 }, 50],\n                    ]\n                  },\n                  'circle-color': {\n                    property: 'pm10Level',\n                    type: 'exponential',\n                    stops: [\n                      [0, 'rgba(236,222,239,0)'],\n                      [10, 'rgb(236,222,239)'],\n                      [20, 'rgb(208,209,230)'],\n                      [30, 'rgb(166,189,219)'],\n                      [40, 'rgb(103,169,207)'],\n                      [50, 'rgb(28,144,153)'],\n                      [60, 'rgb(1,108,89)']\n                    ]\n                  },\n                  'circle-stroke-color': 'white',\n                  'circle-stroke-width': 1,\n                  'circle-opacity': {\n                    stops: [\n                      [14, 0],\n                      [15, 1]\n                    ]\n                  }\n                } }, 'waterway-label'); \n\n        }) \n\n        \n        \n    }, []); \n    \n\n    return ( \n        <div className=\"MapView\" ref={mapContainer}>  \n           \n        </div> \n    ) \n} \n\n\n"]},"metadata":{},"sourceType":"module"}